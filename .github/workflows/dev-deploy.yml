name: DEV - Build, Push Docker Image and Deploy
on:
  push:
    branches:
      - v1-dev
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: DEV
    env:
      IMAGE_NAME: linkedin-scrapper
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Inject .env file
        run: |
          echo "${{ vars.DEV_ENV }}" > .env
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Log in to Private Docker Registry
        run: echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login ${{ secrets.REGISTRY_URL }} -u "${{ secrets.REGISTRY_USERNAME }}" --password-stdin
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:latest
      - name: Log out from Docker Registry
        run: docker logout ${{ secrets.REGISTRY_URL }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    env:
      COMPOSER: linkedin-scrapper

    steps:
      - name: Set up SSH
        run: |
            mkdir -p ~/.ssh
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
            ssh-keyscan -H ${{ secrets.SSH_ON_PREMISE_HOST_ADDRESS }} >> ~/.ssh/known_hosts
      - name: Log in to Private Docker Registry on Server
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.SSH_ON_PREMISE_HOST_USERNAME }}@${{ secrets.SSH_ON_PREMISE_HOST_ADDRESS }} "echo '${{ secrets.REGISTRY_PASSWORD }}' | docker login ${{ secrets.REGISTRY_URL }} -u '${{ secrets.REGISTRY_USERNAME }}' --password-stdin"

      - name: Pull and Deploy Docker Image on Server
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.SSH_ON_PREMISE_HOST_USERNAME }}@${{ secrets.SSH_ON_PREMISE_HOST_ADDRESS }} "cd /home/ubuntu/docker-compose/apps && docker-compose -f ${{ env.COMPOSER }}.yml pull && docker-compose -f ${{ env.COMPOSER }}.yml down && docker-compose -f ${{ env.COMPOSER }}.yml up -d"
