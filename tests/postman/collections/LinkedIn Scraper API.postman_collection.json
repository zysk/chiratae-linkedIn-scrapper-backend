{
  "info": {
    "_postman_id": "1a2b3c4d-5e6f-7g8h-9i0j-1k2l3m4n5o6p",
    "name": "LinkedIn Scraper API",
    "description": "API collection for LinkedIn Scraper project",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Test User\",\n    \"email\": \"testuser@example.com\",\n    \"password\": \"password123\",\n    \"phone\": 1234567890\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "register"]
            },
            "description": "Register a new regular user"
          },
          "response": []
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "const response = pm.response.json();",
                  "if (response.accessToken) {",
                  "    pm.environment.set('accessToken', response.accessToken);",
                  "}",
                  "if (response.refreshToken) {",
                  "    pm.environment.set('refreshToken', response.refreshToken);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"testuser@example.com\",\n    \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "login"]
            },
            "description": "Login with user credentials"
          },
          "response": []
        },
        {
          "name": "Login Admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const response = pm.response.json();",
                  "if (response.accessToken) {",
                  "    pm.environment.set('adminAccessToken', response.accessToken);",
                  "}",
                  "if (response.refreshToken) {",
                  "    pm.environment.set('adminRefreshToken', response.refreshToken);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"{{adminEmail}}\",\n    \"password\": \"{{adminPassword}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/loginAdmin",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "loginAdmin"]
            },
            "description": "Login with admin credentials"
          },
          "response": []
        },
        {
          "name": "Register Admin",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminAccessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"New Admin\",\n    \"email\": \"newadmin@example.com\",\n    \"password\": \"adminpass456\",\n    \"phone\": 9876543210\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/registerAdmin",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "registerAdmin"]
            },
            "description": "Register a new admin (requires admin privileges)"
          },
          "response": []
        },
        {
          "name": "Refresh Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "const response = pm.response.json();",
                  "if (response.accessToken) {",
                  "    pm.environment.set('accessToken', response.accessToken);",
                  "}",
                  "if (response.refreshToken) {",
                  "    pm.environment.set('refreshToken', response.refreshToken);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"refreshToken\": \"{{refreshToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/refreshToken",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "refreshToken"]
            },
            "description": "Refresh access token using refresh token"
          },
          "response": []
        }
      ]
    },
    {
      "name": "User Management",
      "item": [
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/me",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "me"]
            },
            "description": "Get current authenticated user profile"
          },
          "response": []
        },
        {
          "name": "Update Current User",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Updated User Name\",\n    \"phone\": 9876543210\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/me/update",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "me", "update"]
            },
            "description": "Update current user profile"
          },
          "response": []
        },
        {
          "name": "Get All Users (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminAccessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users"]
            },
            "description": "Get all users (admin only)"
          },
          "response": []
        },
        {
          "name": "Get User by ID (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminAccessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{userId}}"]
            },
            "description": "Get user by ID (admin only)"
          },
          "response": []
        },
        {
          "name": "Update User (Admin)",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminAccessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Admin Updated User\",\n    \"isActive\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{userId}}"]
            },
            "description": "Update a user (admin only)"
          },
          "response": []
        },
        {
          "name": "Delete User (Admin)",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminAccessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{userId}}"]
            },
            "description": "Delete a user (admin only)"
          },
          "response": []
        }
      ]
    },
    {
      "name": "LinkedIn Accounts",
      "item": [
        {
          "name": "Create LinkedIn Account",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminAccessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"linkedinuser\",\n    \"password\": \"linkedinpassword\",\n    \"email\": \"linkedin@example.com\",\n    \"description\": \"Test LinkedIn account\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/linkedin-accounts",
              "host": ["{{baseUrl}}"],
              "path": ["api", "linkedin-accounts"]
            },
            "description": "Create a new LinkedIn account"
          },
          "response": []
        },
        {
          "name": "Get All LinkedIn Accounts",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminAccessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/linkedin-accounts",
              "host": ["{{baseUrl}}"],
              "path": ["api", "linkedin-accounts"]
            },
            "description": "Get all LinkedIn accounts"
          },
          "response": []
        },
        {
          "name": "Get LinkedIn Account by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminAccessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/linkedin-accounts/{{linkedinAccountId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "linkedin-accounts", "{{linkedinAccountId}}"]
            },
            "description": "Get a LinkedIn account by ID"
          },
          "response": []
        },
        {
          "name": "Update LinkedIn Account",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminAccessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"description\": \"Updated LinkedIn account\",\n    \"isActive\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/linkedin-accounts/{{linkedinAccountId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "linkedin-accounts", "{{linkedinAccountId}}"]
            },
            "description": "Update a LinkedIn account"
          },
          "response": []
        },
        {
          "name": "Get Next LinkedIn Account",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminAccessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/linkedin/accounts/next",
              "host": ["{{baseUrl}}"],
              "path": ["api", "linkedin", "accounts", "next"]
            },
            "description": "Get the next available LinkedIn account"
          },
          "response": []
        },
        {
          "name": "Delete LinkedIn Account",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminAccessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/linkedin-accounts/{{linkedinAccountId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "linkedin-accounts", "{{linkedinAccountId}}"]
            },
            "description": "Delete a LinkedIn account"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Proxies",
      "item": [
        {
          "name": "Create Proxy",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminAccessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"host\": \"192.168.1.100\",\n    \"port\": 8080,\n    \"username\": \"proxyuser\",\n    \"password\": \"proxypass\",\n    \"protocol\": \"http\",\n    \"description\": \"Test proxy server\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/proxies",
              "host": ["{{baseUrl}}"],
              "path": ["api", "proxies"]
            },
            "description": "Create a new proxy"
          },
          "response": []
        },
        {
          "name": "Get All Proxies",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminAccessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/proxies",
              "host": ["{{baseUrl}}"],
              "path": ["api", "proxies"]
            },
            "description": "Get all proxies"
          },
          "response": []
        },
        {
          "name": "Get Proxy by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminAccessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/proxies/{{proxyId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "proxies", "{{proxyId}}"]
            },
            "description": "Get a proxy by ID"
          },
          "response": []
        },
        {
          "name": "Update Proxy",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminAccessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"description\": \"Updated proxy server\",\n    \"isActive\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/proxies/{{proxyId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "proxies", "{{proxyId}}"]
            },
            "description": "Update a proxy"
          },
          "response": []
        },
        {
          "name": "Get Next Proxy",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminAccessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/linkedin/proxies/next",
              "host": ["{{baseUrl}}"],
              "path": ["api", "linkedin", "proxies", "next"]
            },
            "description": "Get the next available proxy"
          },
          "response": []
        },
        {
          "name": "Delete Proxy",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminAccessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/proxies/{{proxyId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "proxies", "{{proxyId}}"]
            },
            "description": "Delete a proxy"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Campaigns",
      "item": [
        {
          "name": "Create Campaign",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminAccessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Test Campaign\",\n    \"searchQuery\": \"software developer\",\n    \"company\": \"Microsoft\",\n    \"location\": \"Seattle\",\n    \"connectionDegree\": \"2nd\",\n    \"keywords\": [\"javascript\", \"node.js\"],\n    \"maxResults\": 100,\n    \"priority\": \"medium\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/campaigns",
              "host": ["{{baseUrl}}"],
              "path": ["api", "campaigns"]
            },
            "description": "Create a new campaign"
          },
          "response": []
        },
        {
          "name": "Get All Campaigns",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminAccessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/campaigns",
              "host": ["{{baseUrl}}"],
              "path": ["api", "campaigns"]
            },
            "description": "Get all campaigns"
          },
          "response": []
        },
        {
          "name": "Get Campaign by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminAccessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/campaigns/{{campaignId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "campaigns", "{{campaignId}}"]
            },
            "description": "Get a campaign by ID"
          },
          "response": []
        },
        {
          "name": "Update Campaign",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminAccessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Updated Campaign\",\n    \"priority\": \"high\",\n    \"maxResults\": 200\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/campaigns/{{campaignId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "campaigns", "{{campaignId}}"]
            },
            "description": "Update a campaign"
          },
          "response": []
        },
        {
          "name": "Queue Campaign",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminAccessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"campaignId\": \"{{campaignId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/campaigns/queue",
              "host": ["{{baseUrl}}"],
              "path": ["api", "campaigns", "queue"]
            },
            "description": "Add a campaign to the execution queue"
          },
          "response": []
        },
        {
          "name": "Get Campaign Results",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminAccessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/campaigns/{{campaignId}}/results",
              "host": ["{{baseUrl}}"],
              "path": ["api", "campaigns", "{{campaignId}}", "results"]
            },
            "description": "Get results for a specific campaign"
          },
          "response": []
        },
        {
          "name": "Delete Campaign",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminAccessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/campaigns/{{campaignId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "campaigns", "{{campaignId}}"]
            },
            "description": "Delete a campaign"
          },
          "response": []
        }
      ]
    },
    {
      "name": "User Ratings",
      "item": [
        {
          "name": "Rate User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"userId\": \"{{userId}}\",\n    \"rating\": 5,\n    \"comment\": \"Excellent user!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/ratings",
              "host": ["{{baseUrl}}"],
              "path": ["api", "ratings"]
            },
            "description": "Rate a user"
          },
          "response": []
        },
        {
          "name": "Get User Ratings",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/ratings/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "ratings", "{{userId}}"]
            },
            "description": "Get ratings for a user"
          },
          "response": []
        }
      ]
    },
    {
      "name": "LinkedIn Operations",
      "item": [
        {
          "name": "Test LinkedIn Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminAccessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"{{linkedInAccountId}}\",\n    \"password\": \"{{linkedInAccountPassword}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/linkedin/test-login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "linkedin", "test-login"]
            },
            "description": "Test a LinkedIn account login"
          },
          "response": []
        },
        {
          "name": "Search LinkedIn Profiles",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"searchQuery\": \"software developer\",\n    \"company\": \"Google\",\n    \"location\": \"San Francisco\",\n    \"connectionDegree\": \"2nd\",\n    \"keywords\": [\"javascript\", \"react\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/linkedin/search",
              "host": ["{{baseUrl}}"],
              "path": ["api", "linkedin", "search"]
            },
            "description": "Search LinkedIn profiles"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Utility",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/health",
              "host": ["{{baseUrl}}"],
              "path": ["api", "health"]
            },
            "description": "Check API health"
          },
          "response": []
        }
      ]
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{accessToken}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Check if we have a valid token",
          "if (!pm.environment.get('accessToken') || pm.environment.get('tokenExpiry') && new Date(pm.environment.get('tokenExpiry')) <= new Date()) {",
          "    console.log('Token is missing or expired. Obtaining new token...');",
          "    ",
          "    // Login as admin first to get a token",
          "    pm.sendRequest({",
          "        url: pm.environment.get('baseUrl') + '/api/users/loginAdmin',",
          "        method: 'POST',",
          "        header: {",
          "            'Content-Type': 'application/json'",
          "        },",
          "        body: {",
          "            mode: 'raw',",
          "            raw: JSON.stringify({",
          "                email: pm.environment.get('adminEmail'),",
          "                password: pm.environment.get('adminPassword')",
          "            })",
          "        }",
          "    }, function (err, res) {",
          "        if (err) {",
          "            console.error('Error logging in:', err);",
          "        } else if (res.code === 200) {",
          "            const responseJson = res.json();",
          "            if (responseJson.token) {",
          "                console.log('Successfully obtained admin token');",
          "                ",
          "                // Set the token in environment variables",
          "                pm.environment.set('accessToken', responseJson.token);",
          "                ",
          "                // Calculate token expiry (default to 1 hour from now if not specified)",
          "                const expiresIn = responseJson.expiresIn || 3600;",
          "                const expiryDate = new Date();",
          "                expiryDate.setSeconds(expiryDate.getSeconds() + expiresIn);",
          "                pm.environment.set('tokenExpiry', expiryDate.toISOString());",
          "                ",
          "                console.log('Token will expire at:', expiryDate.toISOString());",
          "            } else {",
          "                console.error('No token in response:', responseJson);",
          "            }",
          "        } else {",
          "            console.error('Failed to login. Status:', res.code);",
          "        }",
          "    });",
          "}"
        ]
      }
    }
  ]
}
