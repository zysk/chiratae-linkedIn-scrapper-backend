{
  "info": {
    "_postman_id": "9a915a1f-f12c-4d74-9fe3-e71ce14595a4",
    "name": "LinkedIn Scraper API",
    "description": "API Tests for Chiratae LinkedIn Scraper Backend",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "12345678"
  },
  "item": [
    {
      "name": "Authentication",
      "description": "Authentication endpoints to get tokens for API access",
      "item": [
        {
          "name": "Login User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@example.com\",\n  \"password\": \"Password123!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/users/login",
              "host": ["{{base_url}}"],
              "path": ["api", "users", "login"]
            },
            "description": "Login to get access token"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Campaigns",
      "item": [
        {
          "name": "Create Campaign",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const response = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has data\", function () {",
                  "    pm.expect(response).to.have.property('data');",
                  "    pm.expect(response.data).to.have.property('_id');",
                  "});",
                  "",
                  "if (response.data && response.data._id) {",
                  "    pm.environment.set('campaignId', response.data._id);",
                  "    console.log(\"Campaign ID saved: \" + response.data._id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Software Engineers at Google\",\n    \"searchQuery\": \"Software Engineer\",\n    \"company\": \"Google\",\n    \"location\": \"United States\",\n    \"keywords\": [\"React\", \"Node.js\", \"JavaScript\"],\n    \"maxResults\": 100,\n    \"connectionDegree\": \"2nd\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/campaigns",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "campaigns"
              ]
            },
            "description": "Create a new LinkedIn search campaign"
          },
          "response": []
        },
        {
          "name": "Get All Campaigns",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const response = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has data array\", function () {",
                  "    pm.expect(response).to.have.property('data');",
                  "    pm.expect(response.data).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/campaigns",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "campaigns"
              ],
              "query": [
                {
                  "key": "status",
                  "value": "CREATED",
                  "disabled": true
                },
                {
                  "key": "page",
                  "value": "1",
                  "disabled": true
                },
                {
                  "key": "limit",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "description": "Get all campaigns with optional filters"
          },
          "response": []
        },
        {
          "name": "Get Campaign by ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const response = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has data with correct ID\", function () {",
                  "    pm.expect(response).to.have.property('data');",
                  "    pm.expect(response.data).to.have.property('_id');",
                  "    pm.expect(response.data._id).to.equal(pm.environment.get('campaignId'));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/campaigns/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "campaigns",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{campaignId}}"
                }
              ]
            },
            "description": "Get campaign details by ID"
          },
          "response": []
        },
        {
          "name": "Update Campaign",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const response = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has updated data\", function () {",
                  "    pm.expect(response).to.have.property('data');",
                  "    pm.expect(response.data).to.have.property('name');",
                  "    pm.expect(response.data.name).to.equal('Updated Campaign Name');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Updated Campaign Name\",\n    \"searchQuery\": \"Software Engineer Senior\",\n    \"maxResults\": 150,\n    \"keywords\": [\"React\", \"Node.js\", \"TypeScript\", \"AWS\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/campaigns/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "campaigns",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{campaignId}}"
                }
              ]
            },
            "description": "Update campaign details"
          },
          "response": []
        },
        {
          "name": "Queue Campaign",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const response = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Campaign queued successfully\", function () {",
                  "    pm.expect(response).to.have.property('data');",
                  "    pm.expect(response.data).to.have.property('status');",
                  "    pm.expect(response.data.status).to.equal('QUEUED');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"campaignId\": \"{{campaignId}}\",\n    \"priority\": \"high\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/campaigns/queue",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "campaigns",
                "queue"
              ]
            },
            "description": "Add a campaign to the processing queue"
          },
          "response": []
        },
        {
          "name": "Get Campaign Results",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const response = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has data\", function () {",
                  "    pm.expect(response).to.have.property('data');",
                  "    pm.expect(response.data).to.have.property('results');",
                  "    pm.expect(response.data).to.have.property('pagination');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/campaigns/:id/results",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "campaigns",
                ":id",
                "results"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "disabled": true
                },
                {
                  "key": "limit",
                  "value": "25",
                  "disabled": true
                },
                {
                  "key": "scraped",
                  "value": "true",
                  "disabled": true
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{campaignId}}"
                }
              ]
            },
            "description": "Get results for a specific campaign with pagination"
          },
          "response": []
        },
        {
          "name": "Delete Campaign",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const response = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Campaign deleted successfully\", function () {",
                  "    pm.expect(response).to.have.property('message');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/campaigns/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "campaigns",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "{{campaignId}}"
                }
              ]
            },
            "description": "Delete a campaign"
          },
          "response": []
        }
      ],
      "description": "LinkedIn campaign search and management endpoints"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:4000",
      "type": "string"
    }
  ]
}
